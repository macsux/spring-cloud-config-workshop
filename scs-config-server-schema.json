{
  "definitions": {
    "EncryptConfig": {
      "description": "Encryption configuration",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "key": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "GitConfig": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "uri": {
          "description": "The URI (http://, https://, or ssh://) of a repository that can be used as the default configuration source",
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "description": "The default “label” that can be used with the default repository if a request is received without a label (e.g., if the spring.cloud.config.label property is not set in a client application) The default value is master. You can set label to a branch name, a tag name, or a specific Git commit hash.",
          "type": [
            "string",
            "null"
          ]
        },
        "searchPaths": {
          "description": "A pattern used to search for configuration-containing subdirectories in the default repository",
          "type": [
            "string",
            "null"
          ]
        },
        "cloneOnStart": {
          "description": " Whether the Config Server should clone the default repository when it starts up (by default, the Config Server will only clone the repository when configuration is first requested from the repository)",
          "type": "boolean"
        },
        "username": {
          "description": "The username used to access the default repository (if protected by HTTP Basic authentication)",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password used to access the default repository (if protected by HTTP Basic authentication)",
          "type": [
            "string",
            "null"
          ]
        },
        "skipSslValidation": {
          "description": "For a https:// URI, whether to skip validation of the SSL certificate on the default repository’s server.",
          "type": "boolean"
        },
        "hostKey": {
          "description": "The host key of the Git server. If you have connected to the server via git on the command line, this is in your .ssh/known_hosts. Do not include the algorithm prefix; this is specified in hostKeyAlgorithm. (Optional.)",
          "type": [
            "string",
            "null"
          ]
        },
        "hostKeyAlgorithm": {
          "description": "The algorithm of hostKey: one of “ssh-dss”, “ssh-rsa”, “ecdsa-sha2-nistp256”, “ecdsa-sha2-nistp384”, and “ecdsa-sha2-nistp521”. (Required if supplying hostKey.)",
          "type": [
            "string",
            "null"
          ]
        },
        "privateKey": {
          "description": "The private key that identifies the Git user, with all newline characters replaced by \\n. Passphrase-encrypted private keys are not supported.",
          "type": [
            "string",
            "null"
          ]
        },
        "strictHostKeyChecking": {
          "description": "Whether the Config Server should fail to start if it encounters an error when using the provided hostKey. Default is true",
          "type": "boolean"
        },
        "proxy": {
          "$ref": "#/definitions/GitProxyConfig"
        }
      }
    },
    "GitConfigTop": {
      "description": "Configuration for Git when using it as backing store",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "repos": {
          "description": "Multiple repositories configuration",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "$ref": "#/definitions/GitConfig"
          }
        },
        "uri": {
          "description": "The URI (http://, https://, or ssh://) of a repository that can be used as the default configuration source",
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "description": "The default “label” that can be used with the default repository if a request is received without a label (e.g., if the spring.cloud.config.label property is not set in a client application) The default value is master. You can set label to a branch name, a tag name, or a specific Git commit hash.",
          "type": [
            "string",
            "null"
          ]
        },
        "searchPaths": {
          "description": "A pattern used to search for configuration-containing subdirectories in the default repository",
          "type": [
            "string",
            "null"
          ]
        },
        "cloneOnStart": {
          "description": " Whether the Config Server should clone the default repository when it starts up (by default, the Config Server will only clone the repository when configuration is first requested from the repository)",
          "type": "boolean"
        },
        "username": {
          "description": "The username used to access the default repository (if protected by HTTP Basic authentication)",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password used to access the default repository (if protected by HTTP Basic authentication)",
          "type": [
            "string",
            "null"
          ]
        },
        "skipSslValidation": {
          "description": "For a https:// URI, whether to skip validation of the SSL certificate on the default repository’s server.",
          "type": "boolean"
        },
        "hostKey": {
          "description": "The host key of the Git server. If you have connected to the server via git on the command line, this is in your .ssh/known_hosts. Do not include the algorithm prefix; this is specified in hostKeyAlgorithm. (Optional.)",
          "type": [
            "string",
            "null"
          ]
        },
        "hostKeyAlgorithm": {
          "description": "The algorithm of hostKey: one of “ssh-dss”, “ssh-rsa”, “ecdsa-sha2-nistp256”, “ecdsa-sha2-nistp384”, and “ecdsa-sha2-nistp521”. (Required if supplying hostKey.)",
          "type": [
            "string",
            "null"
          ]
        },
        "privateKey": {
          "description": "The private key that identifies the Git user, with all newline characters replaced by \\n. Passphrase-encrypted private keys are not supported.",
          "type": [
            "string",
            "null"
          ]
        },
        "strictHostKeyChecking": {
          "description": "Whether the Config Server should fail to start if it encounters an error when using the provided hostKey. Default is true",
          "type": "boolean"
        },
        "proxy": {
          "$ref": "#/definitions/GitProxyConfig"
        }
      }
    },
    "GitProxyConfig": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "http": {
          "$ref": "#/definitions/HttpProxyConfig"
        },
        "https": {
          "$ref": "#/definitions/HttpProxyConfig-1"
        }
      }
    },
    "HttpProxyConfig": {
      "description": " proxy object, containing HTTP proxy fields",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "host": {
          "description": "The HTTP proxy host",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "description": "The HTTP proxy port",
          "type": "integer"
        },
        "nonProxyHosts": {
          "description": "The hosts to access outside the HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "description": "The username to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HttpProxyConfig-1": {
      "description": "A proxy object, containing HTTPS proxy fields",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "host": {
          "description": "The HTTP proxy host",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "description": "The HTTP proxy port",
          "type": "integer"
        },
        "nonProxyHosts": {
          "description": "The hosts to access outside the HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "description": "The username to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HttpProxyConfig-2": {
      "description": "Settings for an HTTP proxy",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "host": {
          "description": "The HTTP proxy host",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "description": "The HTTP proxy port",
          "type": "integer"
        },
        "nonProxyHosts": {
          "description": "The hosts to access outside the HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "description": "The username to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        },
        "password": {
          "description": "The password to use with an authenticated HTTP proxy",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "VaultConfig": {
      "description": "Configuration for Vault when using it as backing store",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "host": {
          "description": "The host of the Vault server",
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "description": "The port of the Vault server",
          "type": "integer"
        },
        "backend": {
          "description": "The name of the Vault backend from which to retrieve configuration (default value: secret)",
          "type": [
            "string",
            "null"
          ]
        },
        "defaultKey": {
          "description": "The default key from which to retrieve configuration (default value: application)",
          "type": [
            "string",
            "null"
          ]
        },
        "profileSeparator": {
          "description": "The value used to separate profiles (default value: ,)",
          "type": [
            "string",
            "null"
          ]
        },
        "skipSslValidation": {
          "description": "Whether to skip validation of the SSL certificate on the Vault server.",
          "type": "boolean"
        },
        "proxy": {
          "$ref": "#/definitions/HttpProxyConfig-2"
        }
      }
    }
  },
  "type": "object",
  "properties": {
    "count": {
      "description": "The number of nodes to provision: 1 by default, more for running in high-availability mode",
      "type": "integer"
    },
    "upgrade": {
      "description": "Whether to upgrade the instance",
      "type": "boolean"
    },
    "force": {
      "description": "When upgrade is set to true, whether to force an upgrade of the instance, even if the instance is already at the latest available service version",
      "type": "boolean"
    },
    "git": {
      "$ref": "#/definitions/GitConfigTop"
    },
    "encryptConfig": {
      "$ref": "#/definitions/EncryptConfig"
    },
    "vault": {
      "$ref": "#/definitions/VaultConfig"
    }
  }
}